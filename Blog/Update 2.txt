In this update, I created a basic game with a character controller so that I could begin to experiment with methods of tracking the user. I followed (roughly) the video tutorial here (http://cgcookie.com/unity/2011/12/05/introduction-to-character-controllers/) to create a basic terrain and a first person character controller to walk around in it.

In following with the example laid forth in the middleware discussed in the last post, I assigned a couple scripts to some empty game objects to initiate UDP communication and to enable the gathering and sending of important information from Unity. The UDP communication script is directly from that project and the other scripts are heavily derivative of the project discussed in the last post at this time (for testing purposes).

This first test of user tracking and communication between the programs past the level of saying hello involves tracking how long the player is holding each of the buttons for movement. Back a couple paragraphs ago, I set up a first person character controller that is controlled with WASD and the mouse. Unity will alert Max when one of the WASD buttons has been pressed and also when it has been released. Max will keep a running tab on how long each of the buttons has been held down in total by the user.

In the following script (written by Yiannis), Unity establishes a UDP connection with Max and defines the methods used to send data chunks. Max is listening on port 7470 for the data that Unity is sending.


UDPOUT.CS SCRIPT


This script (greatly amended to suit my needs for this test) watches the WASD keys and amends a variable in the code to send to Max when the button is idle, when it is pressed, and when it is released.


GAMESTART.JS


This script (also heavily amended for my purposes) takes the variable states that have been amended by the previous script and continuously sends them to Max (when they are valuable data - Max will know when the button is turned on and turned off and not worry about idle state - it only needs the edges). 


MAXLAUNCH.CS



This is the corresponding patcher in Max that tracks what Unity is sending. Each data packet from Unity has two parts: a value name (as a string) and then the value itself (an int in this case). All of the data comes into Max through the UDP object and then is parsed by the [route] object that sorts the incoming data out into different outputs based on the variable name. 

PICTUREa

The data coming out is the value which is used to start and stop a timer which increments every tenth of a second while the button is held down.

PICTUREb


